#@ buildpacks = ["binary", "dotnet-core", "go", "java", "nodejs", "php", "python", "ruby", "staticfile"]

#@ def failure_alert():
put: failure-alert
params:
  text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
  channel: "#buildpacks-firehose"
  username: concourse
  icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
#@ end

---
resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource

  - name: bosh-deployment
    type: docker-image
    source:
      repository: cloudfoundry/bosh-deployment-resource

resources:
  - name: buildpacks-ci
    type: git
    source:
      uri: https://github.com/cloudfoundry/buildpacks-ci
      branch: master

  - name: cflinuxfs4
    type: git
    source:
      uri: git@github.com:cf-buildpacks-eng/cflinuxfs4
      branch: main
      private_key: ((cf-buildpacks-eng-github-ssh-key.private_key))

  - name: cflinuxfs4-github-tags
    type: git
    source:
      uri: git@github.com:cf-buildpacks-eng/cflinuxfs4
      private_key: ((cf-buildpacks-eng-github-ssh-key.private_key))
      tag_filter: "*"

  - name: cflinuxfs4-build-trigger
    type: git
    source:
      uri: git@github.com:cf-buildpacks-eng/cflinuxfs4
      private_key: ((cf-buildpacks-eng-github-ssh-key.private_key))
      ignore_paths:
        - receipt.cflinuxfs4.x86_64
        - README.md
        - .gitignore

  - name: receipt-diff
    type: git
    source:
      uri: git@github.com:cloudfoundry/public-buildpacks-ci-robots
      paths: [ receipt.cflinuxfs4.x86_64 ]
      private_key: ((public-buildpacks-ci-robots-deploy-key.private_key))
      tag_filter: "newpackages_cflinuxfs4_*"

  - name: new-cves
    type: git
    source:
      uri: git@github.com:cloudfoundry/public-buildpacks-ci-robots
      paths: [ new-cve-notifications/ubuntu22.04.yml ]
      private_key: ((public-buildpacks-ci-robots-deploy-key.private_key))
      branch: main

  - name: public-robots
    type: git
    source:
      uri: git@github.com:cloudfoundry/public-buildpacks-ci-robots
      private_key: ((public-buildpacks-ci-robots-deploy-key.private_key))
      branch: main

  - name: stack-s3
    type: s3
    source:
      bucket: pivotal-buildpacks
      regexp: rootfs/cflinuxfs4-(.*).tar.gz
      access_key_id: ((pivotal-buildpacks-s3-access-key))
      secret_access_key: ((pivotal-buildpacks-s3-secret-key))

  - name: receipt-s3
    type: s3
    source:
      bucket: pivotal-buildpacks
      regexp: rootfs/receipt.cflinuxfs4.x86_64-(.*)
      access_key_id: ((pivotal-buildpacks-s3-access-key))
      secret_access_key: ((pivotal-buildpacks-s3-secret-key))

  - name: cflinuxfs4-image
    type: docker-image
    source:
      repository: cfbuildpacks/cflinuxfs4
      username: ((cfbuildpacks-dockerhub-user.username))
      password: ((cfbuildpacks-dockerhub-user.password))
      email: cf-buildpacks-eng@pivotal.io

  - name: cflinuxfs4-github-release
    type: github-release
    source:
      drafts: false
      user: cf-buildpacks-eng
      repository: cflinuxfs4
      access_token: ((buildpacks-github-token))

  - name: version
    type: semver
    source:
      bucket: pivotal-buildpacks
      key: versions/stack-cflinuxfs4
      access_key_id: ((pivotal-buildpacks-s3-access-key))
      secret_access_key: ((pivotal-buildpacks-s3-secret-key))

  - name: failure-alert
    type: slack-notification
    source:
      url: ((concourse-job-failure-notifications-slack-webhook))

jobs:
  - name: build-rootfs
    serial: true
    serial_groups: [ cflinuxfs4 ]
    public: true
    plan:
      - in_parallel:
          - get: previous-rootfs-release
            resource: cflinuxfs4-github-tags
          - get: buildpacks-ci
          - get: new-cves
            trigger: true
          - get: rootfs
            resource: cflinuxfs4
          - get: cflinuxfs4-build-trigger
            trigger: true
          - get: version
            params: { pre: rc }
          - get: public-robots
      - do:
          - task: make-rootfs
            file: buildpacks-ci/tasks/make-rootfs/task.yml
            privileged: true
            params:
              STACK: cflinuxfs4
          - put: stack-s3
            params:
              file: rootfs-artifacts/cflinuxfs4-*.tar.gz
          - put: receipt-s3
            params:
              file: receipt-artifacts/receipt.cflinuxfs4.x86_64-*
          - task: generate-receipt-diff
            file: buildpacks-ci/tasks/generate-rootfs-receipt-diff/task.yml
            params:
              STACK: cflinuxfs4
          - put: public-robots
            params:
              repository: public-robots-artifacts
              rebase: true
              tag: git-tags/TAG
          - put: version
            params: { file: version/number }
        on_failure: #@ failure_alert()

  - name: bbl-up-wip
    serial: true
    serial_groups: [ cflinuxfs4 ]
    public: true
    plan:
      - in_parallel:
          - get: previous-rootfs-release
            resource: cflinuxfs4-github-tags
            passed: [ build-rootfs ]
          - get: receipt-diff
            trigger: true
          - get: new-cves
            passed: [ build-rootfs ]
          - get: stack-s3
            passed: [ build-rootfs ]
          - get: version
            passed: [ build-rootfs ]
          - get: receipt-s3
            passed: [ build-rootfs ]
          - get: rootfs
            resource: cflinuxfs4
            passed: [ build-rootfs ]

  - name: deploy-wip
    serial: true
    serial_groups: [ cflinuxfs4 ]
    public: true
    plan:
      - do:
          - in_parallel:
              - get: new-cves
                passed: [ bbl-up-wip ]
              - get: stack-s3
                passed: [ bbl-up-wip ]
              - get: version
                passed: [ bbl-up-wip ]
                trigger: true
              - get: receipt-s3
                passed: [ bbl-up-wip ]
              - get: rootfs
                resource: cflinuxfs4
                passed: [ bbl-up-wip ]
              - get: previous-rootfs-release
                resource: cflinuxfs4-github-tags
                passed: [ bbl-up-wip ]
              - get: buildpacks-ci

  - name: cats-wip
    serial: true
    serial_groups: [ cflinuxfs4 ]
    public: true
    plan:
      - in_parallel:
          - get: buildpacks-ci
          - get: previous-rootfs-release
            resource: cflinuxfs4-github-tags
            passed: [ deploy-wip ]
          - get: new-cves
            passed: [ deploy-wip ]
          - get: stack-s3
            passed: [ deploy-wip ]
          - get: version
            passed: [ deploy-wip ]
            trigger: true
          - get: receipt-s3
            passed: [ deploy-wip ]
          - get: rootfs
            resource: cflinuxfs4
            passed: [ deploy-wip ]

  - name: check-for-race-condition
    serial: true
    serial_groups: [ cflinuxfs4 ]
    public: true
    plan:
      - in_parallel:
          - get: buildpacks-ci
          - get: version
            passed: [ cats-wip ]
            trigger: true
          - get: latest-version
            resource: version
          - get: previous-rootfs-release
            resource: cflinuxfs4-github-tags
            passed: [ cats-wip ]
          - get: new-cves
            passed: [ cats-wip ]
          - get: stack-s3
            passed: [ cats-wip ]
          - get: receipt-s3
            passed: [ cats-wip ]
          - get: rootfs
            resource: cflinuxfs4
            passed: [ cats-wip ]
      - task: check-for-rootfs-race-condition
        file: buildpacks-ci/tasks/check-for-rootfs-race-condition/task.yml

  - name: release-cflinuxfs4
    serial: true
    serial_groups: [ cflinuxfs4 ]
    public: true
    plan:
      - in_parallel:
          - get: buildpacks-ci
          - get: new-cves
            passed: [ check-for-race-condition ]
          - get: stack-s3
            passed: [ check-for-race-condition ]
          - get: receipt-s3
            passed: [ check-for-race-condition ]
          - get: rootfs
            resource: cflinuxfs4
            passed: [ check-for-race-condition ]
          - get: version
            trigger: true
            passed: [ check-for-race-condition ]
            params: { bump: final }
          - get: previous-rootfs-release
            resource: cflinuxfs4-github-tags
            passed: [ check-for-race-condition ]
      - do:
          - task: update-receipt
            file: buildpacks-ci/tasks/update-rootfs-receipt/task.yml
            params:
              STACK: cflinuxfs4
          - task: update-filename
            file: buildpacks-ci/tasks/update-rootfs-filename/task.yml
            params:
              STACK: cflinuxfs4
          - put: cflinuxfs4
            params:
              repository: new-rootfs-commit
              tag: version/number
              rebase: true
          - put: stack-s3
            params:
              from: rootfs-archive/cflinuxfs4-(.*).tar.gz
              to: /rootfs/
          - put: version
            params: { file: version/number }
        on_failure: #@ failure_alert()

  - name: reset-minor-version-to-rc
    serial: true
    public: true
    plan:
      - get: version
        trigger: true
        passed: [ release-cflinuxfs4 ]
        params: { bump: minor, pre: rc }
      - put: version
        params: { file: version/number }

  - name: upload-to-github
    serial: true
    public: true
    plan:
      - in_parallel:
          - get: buildpacks-ci
          - get: previous-rootfs-release
            resource: cflinuxfs4-github-tags
            passed: [ release-cflinuxfs4 ]
          - get: rootfs
            resource: cflinuxfs4
            passed: [ release-cflinuxfs4 ]
          - get: new-cves
            passed: [ release-cflinuxfs4 ]
          - get: stack-s3
            passed: [ release-cflinuxfs4 ]
          - get: version
            trigger: true
            passed: [ release-cflinuxfs4 ]
      - do:
          - task: generate-release-notes
            file: buildpacks-ci/tasks/generate-rootfs-release-notes/task.yml
            params:
              STACK: cflinuxfs4
          - put: cflinuxfs4-github-release
            params:
              name: version/number
              tag: version/number
              body: release-body/body
              globs:
                - stack-s3/cflinuxfs4-*.tar.gz
          - put: new-cves
            params:
              repository: new-cves-artifacts
              rebase: true
        on_failure: #@ failure_alert()

  - name: upload-to-docker
    serial: true
    public: true
    plan:
      - in_parallel:
          - get: buildpacks-ci
          - get: stack-s3
            passed: [ release-cflinuxfs4 ]
          - get: version
            trigger: true
            passed: [ release-cflinuxfs4 ]
      - do:
          - task: rename
            file: buildpacks-ci/tasks/rename-rootfs-for-docker/task.yml
            params:
              STACK: cflinuxfs4
          - in_parallel:
              - put: cflinuxfs4-image
                params:
                  skip_download: true
                  import_file: docker-s3/cflinuxfs4.tar.gz
                  tag: version/number
                  tag_as_latest: true
        on_failure: #@ failure_alert()

  - name: finalize-security-notices
    serial: true
    public: true
    plan:
      - in_parallel:
          - get: buildpacks-ci
            resource: buildpacks-ci
          - get: version
            trigger: true
            passed: [ upload-to-github ]
      - do:
          - task: finalize-security-notices
            file: buildpacks-ci/tasks/finalize-security-notice-stories/task.yml
            attempts: 20
            params:
              TRACKER_PROJECT_ID: 2537714
              TRACKER_REQUESTER_ID: 1431988
              TRACKER_API_TOKEN: ((pivotal-tracker-api-token))
              STACK: cflinuxfs4