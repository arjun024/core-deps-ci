#!/bin/bash

set -euo pipefail

parent_dir="$(cd "$(dirname "$0")" && pwd)"

extract_tarball() {
  rm -rf python
  mkdir python
  tar -xf dependency/*.tgz -C python
}

set_ld_library_path() {
  export LD_LIBRARY_PATH="$PWD/python/lib:${LD_LIBRARY_PATH:-}"
}

check_version() {
  expected_version="$1"
  actual_version="$(./python/bin/python --version | cut -d' ' -f2)"
  if [[ "${actual_version}" != "${expected_version}" ]]; then
    echo "Version ${actual_version} does not match expected version ${expected_version}"
    exit 1
  fi
}

check_server() {
  set +e

  ./python/bin/python "${parent_dir}/fixtures/server.py" 8080 &
  server_pid=$!

  succeeded=0
  for _ in {1..5}; do
    response="$(curl -s http://localhost:8080)"
    if [[ $response == *"Hello world!"* ]]; then
      succeeded=1
      break
    fi
    sleep 1
  done

  kill "${server_pid}"

  if [[ ${succeeded} -eq 0 ]]; then
    echo "Failed to curl server"
    exit 1
  fi

  set -e
}

main() {
  extract_tarball
  set_ld_library_path
  check_version "$1"
  check_server

  echo "All tests passed!"
}

main "$@"
